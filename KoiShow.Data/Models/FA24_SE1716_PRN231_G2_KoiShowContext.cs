// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using KoiShow.Data.Enum;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace KoiShow.Data.Models;

public class FA24_SE1716_PRN231_G2_KoiShowContext : DbContext
{
    public FA24_SE1716_PRN231_G2_KoiShowContext()
    {
    }

    public FA24_SE1716_PRN231_G2_KoiShowContext(DbContextOptions<FA24_SE1716_PRN231_G2_KoiShowContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Animal> Animals { get; set; }

    public virtual DbSet<Contest> Contests { get; set; }

    public virtual DbSet<ContestResult> ContestResults { get; set; }

    public virtual DbSet<New> News { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<Point> Points { get; set; }

    public virtual DbSet<RegisterForm> RegisterForms { get; set; }

    public virtual DbSet<Variety> Varieties { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection"));
    //=> optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    //protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //    => optionsBuilder.UseSqlServer("Data Source=LUAN;Initial Catalog=FA24_SE1716_PRN231_G2_KOISHOW;User ID=sa;Password=12345;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        // Account
        modelBuilder.Entity<Account>().HasData(new List<Account> {
            new Account {
                Id = 1,
                Address = "1773 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                BirthDay = new DateOnly(2003,1,1),
                CreatedTime = DateTime.Now,
                Email = "admin@koi.show",
                FullName = "Quản Trị Viên",
                LastUpdatedTime = DateTime.Now,
                Password = "123",
                Phone = "0971781353",
                Role = (int)RoleEnum.Admin,
                UserName = "admin",
            },
            new Account {
                Id = 2,
                Address = "983 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                BirthDay = new DateOnly(2003,1,1),
                CreatedTime = DateTime.Now,
                Email = "staff@koi.show",
                FullName = "Quản Nhân Viên",
                LastUpdatedTime = DateTime.Now,
                Password = "123",
                Phone = "0971781351",
                Role = (int)RoleEnum.Staff,
                UserName = "staff",
            },
            new Account {
                Id = 3,
                Address = "179 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                BirthDay = new DateOnly(2003,1,1),
                CreatedTime = DateTime.Now,
                Email = "customer1@koi.show",
                FullName = "Quản Khách Hàng 1",
                LastUpdatedTime = DateTime.Now,
                Password = "123",
                Phone = "0971781352",
                Role = (int)RoleEnum.Customer,
                UserName = "customer",
            },
            new Account {
                Id = 4,
                Address = "1 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                BirthDay = new DateOnly(2003,1,1),
                CreatedTime = DateTime.Now,
                Email = "customer2@koi.show",
                FullName = "Quản Khách Hàng 2",
                LastUpdatedTime = DateTime.Now,
                Password = "123",
                Phone = "0971781354",
                Role = (int)RoleEnum.Customer,
                UserName = "customer",
            },
            new Account {
                Id = 5,
                Address = "2 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                BirthDay = new DateOnly(2003,1,1),
                CreatedTime = DateTime.Now,
                Email = "customer3@koi.show",
                FullName = "Quản Khách Hàng 3",
                LastUpdatedTime = DateTime.Now,
                Password = "123",
                Phone = "0971781355",
                Role = (int)RoleEnum.Customer,
                UserName = "customer",
            },
        });

        // Variety

        // Animal

        // Contest

        // Register Form

        // Point

        // Contest Result

        // Payment
    }
}