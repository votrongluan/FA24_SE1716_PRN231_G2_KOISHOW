// <auto-generated />
using System;
using KoiShow.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiShow.Data.Migrations
{
    [DbContext(typeof(FA24_SE1716_PRN231_G2_KoiShowContext))]
    partial class FA24_SE1716_PRN231_G2_KoiShowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiShow.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1773 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                            BirthDay = new DateOnly(2003, 1, 1),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1327),
                            Email = "admin@koi.show",
                            FullName = "Quản Trị Viên",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1329),
                            Password = "123",
                            Phone = "0971781353",
                            Role = 0,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "983 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                            BirthDay = new DateOnly(2003, 1, 1),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1336),
                            Email = "staff@koi.show",
                            FullName = "Quản Nhân Viên",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1337),
                            Password = "123",
                            Phone = "0971781351",
                            Role = 1,
                            UserName = "staff"
                        },
                        new
                        {
                            Id = 3,
                            Address = "179 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                            BirthDay = new DateOnly(2003, 1, 1),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1340),
                            Email = "customer1@koi.show",
                            FullName = "Quản Khách Hàng 1",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1341),
                            Password = "123",
                            Phone = "0971781352",
                            Role = 2,
                            UserName = "customer1"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                            BirthDay = new DateOnly(2003, 1, 1),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1344),
                            Email = "customer2@koi.show",
                            FullName = "Quản Khách Hàng 2",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1345),
                            Password = "123",
                            Phone = "0971781354",
                            Role = 2,
                            UserName = "customer2"
                        },
                        new
                        {
                            Id = 5,
                            Address = "2 đường Kiếm Lai, phường Tu Tiên, quận Hội Châu, thành phố Long Hoàng",
                            BirthDay = new DateOnly(2003, 1, 1),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1348),
                            Email = "customer3@koi.show",
                            FullName = "Quản Khách Hàng 3",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1348),
                            Password = "123",
                            Phone = "0971781355",
                            Role = 2,
                            UserName = "customer3"
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HeathStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("VarietyId")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("VarietyId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalName = "Koi Kohaku 01",
                            BirthDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1471),
                            Description = "Cá Koi Kohaku với màu đỏ trắng đẹp mắt.",
                            Gender = 1,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_kohaku_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1472),
                            OwnerId = 1,
                            Size = 30,
                            VarietyId = 1,
                            Weight = 3
                        },
                        new
                        {
                            Id = 2,
                            AnimalName = "Koi Sanke 01",
                            BirthDate = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1477),
                            Description = "Cá Koi Sanke với đốm đen và đỏ trên nền trắng.",
                            Gender = 2,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_sanke_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1478),
                            OwnerId = 2,
                            Size = 35,
                            VarietyId = 2,
                            Weight = 4
                        },
                        new
                        {
                            Id = 3,
                            AnimalName = "Koi Showa 01",
                            BirthDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1482),
                            Description = "Cá Koi Showa với các đốm đen đỏ nổi bật.",
                            Gender = 1,
                            HeathStatus = "Sick",
                            ImgLink = "https://example.com/koi_showa_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1483),
                            OwnerId = 3,
                            Size = 32,
                            VarietyId = 3,
                            Weight = 3
                        },
                        new
                        {
                            Id = 4,
                            AnimalName = "Koi Shiro Utsuri 01",
                            BirthDate = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1486),
                            Description = "Cá Koi Shiro Utsuri với màu đen trắng.",
                            Gender = 2,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_shiro_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1486),
                            OwnerId = 1,
                            Size = 40,
                            VarietyId = 4,
                            Weight = 5
                        },
                        new
                        {
                            Id = 5,
                            AnimalName = "Koi Hi Utsuri 01",
                            BirthDate = new DateTime(2018, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1490),
                            Description = "Cá Koi Hi Utsuri với đốm đỏ tươi trên nền đen.",
                            Gender = 1,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_hi_utsuri_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1490),
                            OwnerId = 2,
                            Size = 37,
                            VarietyId = 5,
                            Weight = 4
                        },
                        new
                        {
                            Id = 6,
                            AnimalName = "Koi Ki Utsuri 01",
                            BirthDate = new DateTime(2019, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1494),
                            Description = "Cá Koi Ki Utsuri với đốm vàng trên nền đen.",
                            Gender = 2,
                            HeathStatus = "Sick",
                            ImgLink = "https://example.com/koi_ki_utsuri_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1495),
                            OwnerId = 3,
                            Size = 42,
                            VarietyId = 6,
                            Weight = 6
                        },
                        new
                        {
                            Id = 7,
                            AnimalName = "Koi Asagi 01",
                            BirthDate = new DateTime(2021, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1498),
                            Description = "Cá Koi Asagi với màu xanh và đỏ nhạt.",
                            Gender = 1,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_asagi_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1499),
                            OwnerId = 1,
                            Size = 38,
                            VarietyId = 7,
                            Weight = 3
                        },
                        new
                        {
                            Id = 8,
                            AnimalName = "Koi Shusui 01",
                            BirthDate = new DateTime(2020, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1502),
                            Description = "Cá Koi Shusui với các vảy lớn và màu sắc đẹp.",
                            Gender = 2,
                            HeathStatus = "Healthy",
                            ImgLink = "https://example.com/koi_shusui_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1503),
                            OwnerId = 2,
                            Size = 36,
                            VarietyId = 8,
                            Weight = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalName = "Koi Bekko 01",
                            BirthDate = new DateTime(2019, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1507),
                            Description = "Cá Koi Bekko với các đốm đen trên nền trắng.",
                            Gender = 1,
                            HeathStatus = "Sick",
                            ImgLink = "https://example.com/koi_bekko_01.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1507),
                            OwnerId = 3,
                            Size = 34,
                            VarietyId = 9,
                            Weight = 4
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.Contest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorPointPercent")
                        .HasColumnType("int");

                    b.Property<string>("CompetitionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Participants")
                        .HasColumnType("int");

                    b.Property<int?>("PatternPointPercent")
                        .HasColumnType("int");

                    b.Property<int?>("ShapePointPercent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Contests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorPointPercent = 35,
                            CompetitionType = "Beauty",
                            ContactInfo = "info@koicontest.com",
                            ContestName = "Koi Beauty Contest",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1541),
                            Description = "Thi đấu để chọn ra những chú cá Koi đẹp nhất về màu sắc và hình dáng.",
                            EndDate = new DateTime(2024, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_beauty_contest.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1542),
                            Location = "Hồ Chí Minh",
                            Participants = 50,
                            PatternPointPercent = 25,
                            ShapePointPercent = 40,
                            StartDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi sắc đẹp cá Koi"
                        },
                        new
                        {
                            Id = 2,
                            ColorPointPercent = 40,
                            CompetitionType = "Performance",
                            ContactInfo = "contact@koicontest.com",
                            ContestName = "Koi Performance Contest",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1548),
                            Description = "Cuộc thi các màn trình diễn cá Koi độc đáo.",
                            EndDate = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_performance_contest.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1549),
                            Location = "Hà Nội",
                            Participants = 40,
                            PatternPointPercent = 30,
                            ShapePointPercent = 30,
                            StartDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi trình diễn cá Koi"
                        },
                        new
                        {
                            Id = 3,
                            ColorPointPercent = 35,
                            CompetitionType = "Exhibition",
                            ContactInfo = "support@koicontest.com",
                            ContestName = "International Koi Show",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1553),
                            Description = "Sự kiện triển lãm cá Koi quốc tế với nhiều loại cá đẹp từ các quốc gia.",
                            EndDate = new DateTime(2025, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/international_koi_show.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1553),
                            Location = "Đà Nẵng",
                            Participants = 100,
                            PatternPointPercent = 30,
                            ShapePointPercent = 35,
                            StartDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Triển lãm cá Koi quốc tế"
                        },
                        new
                        {
                            Id = 4,
                            ColorPointPercent = 45,
                            CompetitionType = "Breeding",
                            ContactInfo = "breeding@koicontest.com",
                            ContestName = "Koi Breeding Contest",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1558),
                            Description = "Cuộc thi chọn ra những giống cá Koi khỏe mạnh nhất.",
                            EndDate = new DateTime(2025, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_breeding_contest.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1559),
                            Location = "Hồ Chí Minh",
                            Participants = 30,
                            PatternPointPercent = 30,
                            ShapePointPercent = 25,
                            StartDate = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi sinh sản cá Koi"
                        },
                        new
                        {
                            Id = 5,
                            ColorPointPercent = 50,
                            CompetitionType = "Speed",
                            ContactInfo = "swim@koicontest.com",
                            ContestName = "Koi Swimming Contest",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1563),
                            Description = "Cuộc thi tốc độ bơi lội của các giống cá Koi.",
                            EndDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_swimming_contest.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1563),
                            Location = "Hải Phòng",
                            Participants = 25,
                            PatternPointPercent = 30,
                            ShapePointPercent = 20,
                            StartDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi bơi lội cá Koi"
                        },
                        new
                        {
                            Id = 6,
                            ColorPointPercent = 40,
                            CompetitionType = "National",
                            ContactInfo = "national@koicontest.com",
                            ContestName = "National Koi Competition",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1568),
                            Description = "Cuộc thi cá Koi lớn nhất toàn quốc.",
                            EndDate = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/national_koi_competition.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1569),
                            Location = "Huế",
                            Participants = 80,
                            PatternPointPercent = 30,
                            ShapePointPercent = 30,
                            StartDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi cá Koi toàn quốc"
                        },
                        new
                        {
                            Id = 7,
                            ColorPointPercent = 35,
                            CompetitionType = "Regional",
                            ContactInfo = "regional@koicontest.com",
                            ContestName = "Regional Koi Championship",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1573),
                            Description = "Giải vô địch cá Koi với sự tham gia của các giống cá Koi nổi tiếng.",
                            EndDate = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/regional_koi_championship.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1573),
                            Location = "Nha Trang",
                            Participants = 60,
                            PatternPointPercent = 30,
                            ShapePointPercent = 35,
                            StartDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Giải vô địch cá Koi khu vực"
                        },
                        new
                        {
                            Id = 8,
                            ColorPointPercent = 30,
                            CompetitionType = "Art",
                            ContactInfo = "art@koicontest.com",
                            ContestName = "Koi Art Exhibition",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1578),
                            Description = "Triển lãm nghệ thuật về cá Koi, tập trung vào vẻ đẹp tự nhiên của loài cá này.",
                            EndDate = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_art_exhibition.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1579),
                            Location = "Đà Lạt",
                            Participants = 70,
                            PatternPointPercent = 30,
                            ShapePointPercent = 40,
                            StartDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Triển lãm nghệ thuật cá Koi"
                        },
                        new
                        {
                            Id = 9,
                            ColorPointPercent = 40,
                            CompetitionType = "Innovation",
                            ContactInfo = "innovation@koicontest.com",
                            ContestName = "Koi Innovation Contest",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1583),
                            Description = "Cuộc thi sáng tạo mới về kỹ thuật chăm sóc và lai tạo cá Koi.",
                            EndDate = new DateTime(2025, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://example.com/koi_innovation_contest.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1583),
                            Location = "Vũng Tàu",
                            Participants = 55,
                            PatternPointPercent = 30,
                            ShapePointPercent = 30,
                            StartDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Title = "Cuộc thi sáng tạo cá Koi"
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.ContestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContestId")
                        .HasColumnType("int");

                    b.Property<string>("ContestResultDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestResultName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsFinalized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPublished")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Prize")
                        .HasColumnType("int");

                    b.Property<string>("PrizeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalScore")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContestId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("ContestResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Màu sắc",
                            Comments = "Hình dáng hoàn hảo, màu sắc rực rỡ.",
                            ContestId = 1,
                            ContestResultDescription = "Giải nhất cho Koi có màu sắc và hình dáng xuất sắc.",
                            ContestResultName = "Kết quả cuộc thi Koi Đẹp Nhất",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1782),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1782),
                            Prize = 1000,
                            PrizeDescription = "Cúp vàng và 1000 USD",
                            Rank = 1,
                            Status = "Final",
                            TotalScore = 290.5
                        },
                        new
                        {
                            Id = 2,
                            Category = "Hình dáng",
                            Comments = "Hình dáng tốt nhưng cần cải thiện về màu sắc.",
                            ContestId = 1,
                            ContestResultDescription = "Giải nhì cho Koi có hình dáng cân đối.",
                            ContestResultName = "Kết quả cuộc thi Koi Cân Đối Nhất",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1787),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1788),
                            Prize = 500,
                            PrizeDescription = "Cúp bạc và 500 USD",
                            Rank = 2,
                            Status = "Final",
                            TotalScore = 275.0
                        },
                        new
                        {
                            Id = 3,
                            Category = "Sáng tạo",
                            Comments = "Koi có sự sáng tạo tuyệt vời về họa tiết và màu sắc.",
                            ContestId = 2,
                            ContestResultDescription = "Giải nhất cho Koi có sự kết hợp màu sắc độc đáo.",
                            ContestResultName = "Kết quả cuộc thi Koi Sáng Tạo",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1792),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1793),
                            Prize = 1200,
                            PrizeDescription = "Cúp vàng và 1200 USD",
                            Rank = 1,
                            Status = "Final",
                            TotalScore = 288.0
                        },
                        new
                        {
                            Id = 4,
                            Category = "Họa tiết",
                            Comments = "Họa tiết ấn tượng nhưng cần cải thiện về màu sắc.",
                            ContestId = 2,
                            ContestResultDescription = "Giải nhì cho Koi có họa tiết độc đáo.",
                            ContestResultName = "Kết quả cuộc thi Koi Độc Đáo",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1796),
                            IsFinalized = "Yes",
                            IsPublished = "No",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1797),
                            Prize = 600,
                            PrizeDescription = "Cúp bạc và 600 USD",
                            Rank = 2,
                            Status = "Pending",
                            TotalScore = 270.0
                        },
                        new
                        {
                            Id = 5,
                            Category = "Koi nhỏ",
                            Comments = "Koi nhỏ nhưng rất hoàn thiện về mọi mặt.",
                            ContestId = 3,
                            ContestResultDescription = "Giải nhất cho Koi nhỏ có hình dáng và màu sắc hoàn hảo.",
                            ContestResultName = "Kết quả cuộc thi Koi Nhỏ Đẹp Nhất",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1800),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1801),
                            Prize = 1500,
                            PrizeDescription = "Cúp vàng và 1500 USD",
                            Rank = 1,
                            Status = "Final",
                            TotalScore = 295.5
                        },
                        new
                        {
                            Id = 6,
                            Category = "Độc lạ",
                            Comments = "Có nhiều đặc điểm độc đáo nhưng màu sắc chưa đồng đều.",
                            ContestId = 3,
                            ContestResultDescription = "Giải nhì cho Koi có đặc điểm khác biệt.",
                            ContestResultName = "Kết quả cuộc thi Koi Độc Lạ",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1805),
                            IsFinalized = "Yes",
                            IsPublished = "No",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1805),
                            Prize = 800,
                            PrizeDescription = "Cúp bạc và 800 USD",
                            Rank = 2,
                            Status = "Pending",
                            TotalScore = 282.0
                        },
                        new
                        {
                            Id = 7,
                            Category = "Hoàn hảo",
                            Comments = "Koi gần như hoàn hảo, không có khuyết điểm nào đáng kể.",
                            ContestId = 4,
                            ContestResultDescription = "Giải nhất cho Koi hoàn thiện về cả màu sắc và hình dáng.",
                            ContestResultName = "Kết quả cuộc thi Koi Hoàn Hảo",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1808),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1809),
                            Prize = 2000,
                            PrizeDescription = "Cúp vàng và 2000 USD",
                            Rank = 1,
                            Status = "Final",
                            TotalScore = 299.0
                        },
                        new
                        {
                            Id = 8,
                            Category = "Màu sắc",
                            Comments = "Màu sắc đồng đều nhưng hình dáng chưa hoàn thiện.",
                            ContestId = 4,
                            ContestResultDescription = "Giải nhì cho Koi có màu sắc đồng đều.",
                            ContestResultName = "Kết quả cuộc thi Koi Màu Sắc Tốt",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1813),
                            IsFinalized = "Yes",
                            IsPublished = "No",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1814),
                            Prize = 1000,
                            PrizeDescription = "Cúp bạc và 1000 USD",
                            Rank = 2,
                            Status = "Pending",
                            TotalScore = 285.5
                        },
                        new
                        {
                            Id = 9,
                            Category = "Cân đối",
                            Comments = "Hình dáng hoàn hảo, nhưng cần cải thiện họa tiết.",
                            ContestId = 5,
                            ContestResultDescription = "Giải nhất cho Koi cân đối về hình dáng.",
                            ContestResultName = "Kết quả cuộc thi Koi Cân Đối Nhất",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1817),
                            IsFinalized = "Yes",
                            IsPublished = "Yes",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1818),
                            Prize = 1700,
                            PrizeDescription = "Cúp vàng và 1700 USD",
                            Rank = 1,
                            Status = "Final",
                            TotalScore = 293.0
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPublished")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("News");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("ActualCost")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("FinalAmount")
                        .HasColumnType("float");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegisterFormId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Vatrate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RegisterFormId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualCost = 90.450000000000003,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1858),
                            Currency = "USD",
                            Description = "Payment for registration form 1",
                            DiscountAmount = 10.050000000000001,
                            FinalAmount = 100.5,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1858),
                            PaymentAmount = 100.5,
                            PaymentDate = new DateTime(2024, 9, 22, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1849),
                            PaymentStatus = "Completed",
                            RegisterFormId = 1,
                            TransactionId = "TXN123456789",
                            Vatrate = 0.10000000000000001
                        },
                        new
                        {
                            Id = 2,
                            ActualCost = 138.69,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1864),
                            Currency = "USD",
                            Description = "Payment for registration form 2",
                            DiscountAmount = 12.06,
                            FinalAmount = 150.75,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1865),
                            PaymentAmount = 150.75,
                            PaymentDate = new DateTime(2024, 9, 24, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1862),
                            PaymentStatus = "Pending",
                            RegisterFormId = 2,
                            TransactionId = "TXN123456790",
                            Vatrate = 0.080000000000000002
                        },
                        new
                        {
                            Id = 3,
                            ActualCost = 190.0,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1869),
                            Currency = "USD",
                            Description = "Payment for registration form 3",
                            DiscountAmount = 10.0,
                            FinalAmount = 200.0,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1870),
                            PaymentAmount = 200.0,
                            PaymentDate = new DateTime(2024, 9, 26, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1867),
                            PaymentStatus = "Completed",
                            RegisterFormId = 3,
                            TransactionId = "TXN123456791",
                            Vatrate = 0.050000000000000003
                        },
                        new
                        {
                            Id = 4,
                            ActualCost = 232.72999999999999,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1874),
                            Currency = "USD",
                            Description = "Payment for registration form 4",
                            DiscountAmount = 17.52,
                            FinalAmount = 250.25,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1875),
                            PaymentAmount = 250.25,
                            PaymentDate = new DateTime(2024, 9, 28, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1872),
                            PaymentStatus = "Failed",
                            RegisterFormId = 4,
                            TransactionId = "TXN123456792",
                            Vatrate = 0.070000000000000007
                        },
                        new
                        {
                            Id = 5,
                            ActualCost = 264.66000000000003,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1879),
                            Currency = "USD",
                            Description = "Payment for registration form 5",
                            DiscountAmount = 36.090000000000003,
                            FinalAmount = 300.75,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1879),
                            PaymentAmount = 300.75,
                            PaymentDate = new DateTime(2024, 9, 30, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1877),
                            PaymentStatus = "Completed",
                            RegisterFormId = 5,
                            TransactionId = "TXN123456793",
                            Vatrate = 0.12
                        },
                        new
                        {
                            Id = 6,
                            ActualCost = 315.0,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1884),
                            Currency = "USD",
                            Description = "Payment for registration form 6",
                            DiscountAmount = 35.0,
                            FinalAmount = 350.0,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1885),
                            PaymentAmount = 350.0,
                            PaymentDate = new DateTime(2024, 10, 1, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1882),
                            PaymentStatus = "Pending",
                            RegisterFormId = 6,
                            TransactionId = "TXN123456794",
                            Vatrate = 0.10000000000000001
                        },
                        new
                        {
                            Id = 7,
                            ActualCost = 340.0,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1889),
                            Currency = "USD",
                            Description = "Payment for registration form 7",
                            DiscountAmount = 60.0,
                            FinalAmount = 400.0,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1889),
                            PaymentAmount = 400.0,
                            PaymentDate = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1887),
                            PaymentStatus = "Completed",
                            RegisterFormId = 7,
                            TransactionId = "TXN123456795",
                            Vatrate = 0.14999999999999999
                        },
                        new
                        {
                            Id = 8,
                            ActualCost = 409.95999999999998,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1893),
                            Currency = "USD",
                            Description = "Payment for registration form 8",
                            DiscountAmount = 40.539999999999999,
                            FinalAmount = 450.5,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1894),
                            PaymentAmount = 450.5,
                            PaymentDate = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1891),
                            PaymentStatus = "Failed",
                            RegisterFormId = 8,
                            TransactionId = "TXN123456796",
                            Vatrate = 0.089999999999999997
                        },
                        new
                        {
                            Id = 9,
                            ActualCost = 400.0,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1898),
                            Currency = "USD",
                            Description = "Payment for registration form 9",
                            DiscountAmount = 100.0,
                            FinalAmount = 500.0,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1898),
                            PaymentAmount = 500.0,
                            PaymentDate = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1896),
                            PaymentStatus = "Completed",
                            RegisterFormId = 9,
                            TransactionId = "TXN123456797",
                            Vatrate = 0.20000000000000001
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorPoint")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("JudgeRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JuryId")
                        .HasColumnType("int");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PatternPoint")
                        .HasColumnType("int");

                    b.Property<int?>("Penalties")
                        .HasColumnType("int");

                    b.Property<int?>("PointStatus")
                        .HasColumnType("int");

                    b.Property<int?>("RegisterFormId")
                        .HasColumnType("int");

                    b.Property<int?>("ShapePoint")
                        .HasColumnType("int");

                    b.Property<int?>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JuryId");

                    b.HasIndex("RegisterFormId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorPoint = 90,
                            Comment = "Hình dáng cân đối, màu sắc nổi bật.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1693),
                            JudgeRank = "Expert",
                            JuryId = 1,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1693),
                            PatternPoint = 88,
                            Penalties = 0,
                            PointStatus = 1,
                            RegisterFormId = 1,
                            ShapePoint = 85,
                            TotalScore = 263
                        },
                        new
                        {
                            Id = 2,
                            ColorPoint = 85,
                            Comment = "Hình dáng ổn định, màu sắc hài hòa.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1698),
                            JudgeRank = "Intermediate",
                            JuryId = 2,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1699),
                            PatternPoint = 82,
                            Penalties = 1,
                            PointStatus = 1,
                            RegisterFormId = 2,
                            ShapePoint = 80,
                            TotalScore = 246
                        },
                        new
                        {
                            Id = 3,
                            ColorPoint = 95,
                            Comment = "Xuất sắc trong mọi khía cạnh.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1702),
                            JudgeRank = "Master",
                            JuryId = 3,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1702),
                            PatternPoint = 94,
                            Penalties = 0,
                            PointStatus = 1,
                            RegisterFormId = 3,
                            ShapePoint = 92,
                            TotalScore = 281
                        },
                        new
                        {
                            Id = 4,
                            ColorPoint = 75,
                            Comment = "Hình dáng tốt nhưng màu sắc cần cải thiện.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1706),
                            JudgeRank = "Novice",
                            JuryId = 4,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1706),
                            PatternPoint = 78,
                            Penalties = 2,
                            PointStatus = 1,
                            RegisterFormId = 4,
                            ShapePoint = 70,
                            TotalScore = 221
                        },
                        new
                        {
                            Id = 5,
                            ColorPoint = 90,
                            Comment = "Hình dáng và màu sắc đẹp, có vài khuyết điểm nhỏ.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1709),
                            JudgeRank = "Expert",
                            JuryId = 1,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1710),
                            PatternPoint = 85,
                            Penalties = 0,
                            PointStatus = 1,
                            RegisterFormId = 5,
                            ShapePoint = 88,
                            TotalScore = 263
                        },
                        new
                        {
                            Id = 6,
                            ColorPoint = 88,
                            Comment = "Màu sắc đẹp nhưng hình dáng còn chưa đồng đều.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1715),
                            JudgeRank = "Intermediate",
                            JuryId = 2,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1715),
                            PatternPoint = 86,
                            Penalties = 1,
                            PointStatus = 1,
                            RegisterFormId = 6,
                            ShapePoint = 83,
                            TotalScore = 257
                        },
                        new
                        {
                            Id = 7,
                            ColorPoint = 97,
                            Comment = "Hoàn hảo trong tất cả các yếu tố.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1719),
                            JudgeRank = "Master",
                            JuryId = 3,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1719),
                            PatternPoint = 96,
                            Penalties = 0,
                            PointStatus = 1,
                            RegisterFormId = 7,
                            ShapePoint = 95,
                            TotalScore = 288
                        },
                        new
                        {
                            Id = 8,
                            ColorPoint = 80,
                            Comment = "Hình dáng và màu sắc trung bình, cần cải thiện.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1722),
                            JudgeRank = "Novice",
                            JuryId = 4,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1723),
                            PatternPoint = 82,
                            Penalties = 3,
                            PointStatus = 1,
                            RegisterFormId = 8,
                            ShapePoint = 75,
                            TotalScore = 234
                        },
                        new
                        {
                            Id = 9,
                            ColorPoint = 92,
                            Comment = "Rất tốt, hình dáng và màu sắc gần như hoàn hảo.",
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1726),
                            JudgeRank = "Expert",
                            JuryId = 1,
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1727),
                            PatternPoint = 91,
                            Penalties = 0,
                            PointStatus = 1,
                            RegisterFormId = 9,
                            ShapePoint = 90,
                            TotalScore = 273
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.RegisterForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckinStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContestId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ContestId");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("RegisterForms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Red",
                            ContestId = 1,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1628),
                            EntryTitle = "Koi Sắc Màu Đỏ",
                            HealthStatus = "Good",
                            Image = "https://example.com/koi_red.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1629),
                            Notes = "Cá khỏe mạnh, nổi bật với màu sắc đỏ rực.",
                            Pattern = "Solid",
                            RegistrationDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Round",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            ApprovalStatus = "Pending",
                            CheckinStatus = "Checked In",
                            Color = "Black and White",
                            ContestId = 1,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1634),
                            EntryTitle = "Koi Trắng Đen",
                            HealthStatus = "Fair",
                            Image = "https://example.com/koi_black_white.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1635),
                            Notes = "Cá có màu sắc hài hòa giữa trắng và đen.",
                            Pattern = "Mixed",
                            RegistrationDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Long",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Yellow",
                            ContestId = 2,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1638),
                            EntryTitle = "Koi Vàng Óng",
                            HealthStatus = "Excellent",
                            Image = "https://example.com/koi_yellow.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1639),
                            Notes = "Màu vàng óng ánh, thân hình cân đối.",
                            Pattern = "Solid",
                            RegistrationDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Slim",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            ApprovalStatus = "Pending",
                            CheckinStatus = "Pending",
                            Color = "Orange",
                            ContestId = 2,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1643),
                            EntryTitle = "Koi Cam Nổi Bật",
                            HealthStatus = "Good",
                            Image = "https://example.com/koi_orange.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1644),
                            Notes = "Cá Koi cam rực rỡ, độc đáo.",
                            Pattern = "Mixed",
                            RegistrationDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Short",
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Black",
                            ContestId = 3,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1647),
                            EntryTitle = "Koi Đen Bóng",
                            HealthStatus = "Excellent",
                            Image = "https://example.com/koi_black.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1647),
                            Notes = "Cá Koi với màu đen bóng khỏe mạnh.",
                            Pattern = "Solid",
                            RegistrationDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Round",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Blue",
                            ContestId = 3,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1652),
                            EntryTitle = "Koi Xanh Biển",
                            HealthStatus = "Fair",
                            Image = "https://example.com/koi_blue.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1652),
                            Notes = "Cá Koi có màu xanh biển đậm.",
                            Pattern = "Mixed",
                            RegistrationDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Slim",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            ApprovalStatus = "Pending",
                            CheckinStatus = "Pending",
                            Color = "Gray",
                            ContestId = 4,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1656),
                            EntryTitle = "Koi Xám Khói",
                            HealthStatus = "Good",
                            Image = "https://example.com/koi_gray.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1656),
                            Notes = "Màu xám khói độc đáo, cá có sức sống tốt.",
                            Pattern = "Solid",
                            RegistrationDate = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Long",
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Pink",
                            ContestId = 4,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1660),
                            EntryTitle = "Koi Hồng Nhẹ Nhàng",
                            HealthStatus = "Excellent",
                            Image = "https://example.com/koi_pink.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1660),
                            Notes = "Cá Koi màu hồng phớt nhẹ nhàng.",
                            Pattern = "Mixed",
                            RegistrationDate = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Short",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            ApprovalStatus = "Approved",
                            CheckinStatus = "Checked In",
                            Color = "Purple",
                            ContestId = 5,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1663),
                            EntryTitle = "Koi Tím Thủy Chung",
                            HealthStatus = "Fair",
                            Image = "https://example.com/koi_purple.jpg",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1664),
                            Notes = "Màu tím độc đáo, thân hình cân đối.",
                            Pattern = "Solid",
                            RegistrationDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Shape = "Round",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.Variety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Index_Id")
                        .IsUnique();

                    b.ToTable("Varieties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1396),
                            Description = "Cá Koi với các đốm màu đỏ trên nền trắng.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1396),
                            Name = "Kohaku"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1399),
                            Description = "Cá Koi với các đốm đỏ và đen trên nền trắng.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1400),
                            Name = "Taisho Sanke"
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1402),
                            Description = "Cá Koi với các đốm đen và đỏ trên nền trắng, thường có màu đen trên đầu.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1402),
                            Name = "Showa Sanshoku"
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1404),
                            Description = "Cá Koi đen với các đốm trắng xen kẽ.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1405),
                            Name = "Shiro Utsuri"
                        },
                        new
                        {
                            Id = 5,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1414),
                            Description = "Cá Koi đen với các đốm đỏ tươi.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1415),
                            Name = "Hi Utsuri"
                        },
                        new
                        {
                            Id = 6,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1418),
                            Description = "Cá Koi đen với các đốm vàng.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1418),
                            Name = "Ki Utsuri"
                        },
                        new
                        {
                            Id = 7,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1420),
                            Description = "Cá Koi với vảy màu xanh nhạt trên lưng và bụng màu đỏ.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1420),
                            Name = "Asagi"
                        },
                        new
                        {
                            Id = 8,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1422),
                            Description = "Loại cá Koi da trơn với các vảy lớn chạy dọc theo lưng, có màu xanh nhạt và đỏ.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1423),
                            Name = "Shusui"
                        },
                        new
                        {
                            Id = 9,
                            CreatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1424),
                            Description = "Cá Koi có màu trắng, đỏ hoặc vàng với các đốm đen.",
                            LastUpdatedTime = new DateTime(2024, 10, 2, 8, 48, 13, 411, DateTimeKind.Local).AddTicks(1425),
                            Name = "Bekko"
                        });
                });

            modelBuilder.Entity("KoiShow.Data.Models.Animal", b =>
                {
                    b.HasOne("KoiShow.Data.Models.Account", "Owner")
                        .WithMany("Animals")
                        .HasForeignKey("OwnerId");

                    b.HasOne("KoiShow.Data.Models.Variety", "Variety")
                        .WithMany("Animals")
                        .HasForeignKey("VarietyId");

                    b.Navigation("Owner");

                    b.Navigation("Variety");
                });

            modelBuilder.Entity("KoiShow.Data.Models.ContestResult", b =>
                {
                    b.HasOne("KoiShow.Data.Models.Contest", "Contest")
                        .WithMany("ContestResults")
                        .HasForeignKey("ContestId");

                    b.Navigation("Contest");
                });

            modelBuilder.Entity("KoiShow.Data.Models.New", b =>
                {
                    b.HasOne("KoiShow.Data.Models.Account", "Author")
                        .WithMany("News")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Payment", b =>
                {
                    b.HasOne("KoiShow.Data.Models.RegisterForm", "RegisterForm")
                        .WithMany("Payments")
                        .HasForeignKey("RegisterFormId");

                    b.Navigation("RegisterForm");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Point", b =>
                {
                    b.HasOne("KoiShow.Data.Models.Account", "Jury")
                        .WithMany("Points")
                        .HasForeignKey("JuryId");

                    b.HasOne("KoiShow.Data.Models.RegisterForm", "RegisterForm")
                        .WithMany("Points")
                        .HasForeignKey("RegisterFormId");

                    b.Navigation("Jury");

                    b.Navigation("RegisterForm");
                });

            modelBuilder.Entity("KoiShow.Data.Models.RegisterForm", b =>
                {
                    b.HasOne("KoiShow.Data.Models.Animal", "Animal")
                        .WithMany("RegisterForms")
                        .HasForeignKey("AnimalId");

                    b.HasOne("KoiShow.Data.Models.Contest", "Contest")
                        .WithMany("RegisterForms")
                        .HasForeignKey("ContestId");

                    b.Navigation("Animal");

                    b.Navigation("Contest");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Account", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("News");

                    b.Navigation("Points");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Animal", b =>
                {
                    b.Navigation("RegisterForms");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Contest", b =>
                {
                    b.Navigation("ContestResults");

                    b.Navigation("RegisterForms");
                });

            modelBuilder.Entity("KoiShow.Data.Models.RegisterForm", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Points");
                });

            modelBuilder.Entity("KoiShow.Data.Models.Variety", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
